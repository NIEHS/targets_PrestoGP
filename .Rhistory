dplyr::rename_with(~ gsub("frac_8_", paste0("frac_", texture_classes$classes[8], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_9_", paste0("frac_", texture_classes$classes[9], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_10_", paste0("frac_", texture_classes$classes[10], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_11_", paste0("frac_", texture_classes$classes[11], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_12_", paste0("frac_", texture_classes$classes[12], "_"), .x, fixed = TRUE))
olm_values
tar_invalidate(sf_pesticide_huc)
tar_invalidate(sf_pesticide_buffer)
tar_make()
sf_pesticide_huc <- tar_read(sf_pesticide_huc)
sf_pesticide_huc
tar_invalidate(olm_buffer)
points <- tar_read(sf_pesticide)
wbd_huc
wbd_huc <- tar_read(wbd_data)
HUC12 <- sf::st_read(wbd_huc, layer = "WBDHU12")
# Convert both the AZO points and HUC to Albers Equal Area projected coordinate system
#   AZO.t <- sf::st_transform(points, "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0
# +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
AZO.t <- sf::st_transform(points, crs = st_crs(HUC12))
AZO.HUC.join <- sf::st_join(AZO.t, HUC12)
AZO.t
HUC12
sf_use_s2(FALSE)
AZO.HUC.join <- sf::st_join(AZO.t, HUC12)
points
HUC12
# Convert both the AZO points and HUC to Albers Equal Area projected coordinate system
AZO.t <- sf::st_transform(points, "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0
+ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
AZO.t
tar_make()
olm_values
?rename_with
# Rename the number with the class name - ugly but it works
olm_values <- dplyr::rename_with(olm_values, ~ gsub("frac_1_", paste0("frac_", texture_classes$classes[1], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_2_", paste0("frac_", texture_classes$classes[2], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_3_", paste0("frac_", texture_classes$classes[3], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_4_", paste0("frac_", texture_classes$classes[4], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_5_", paste0("frac_", texture_classes$classes[5], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_6_", paste0("frac_", texture_classes$classes[6], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_7_", paste0("frac_", texture_classes$classes[7], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_8_", paste0("frac_", texture_classes$classes[8], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_9_", paste0("frac_", texture_classes$classes[9], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_10_", paste0("frac_", texture_classes$classes[10], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_11_", paste0("frac_", texture_classes$classes[11], "_"), .x, fixed = TRUE)) %>%
dplyr::rename_with(~ gsub("frac_12_", paste0("frac_", texture_classes$classes[12], "_"), .x, fixed = TRUE))
sf_pesticide_buffer
sf_pesticide_buffer$geometry
olm_raster <- olm_layer_rast[[1]]
AZO.geometry <- data.AZO |> st_geometry()
AZO.geometry
olm_raster
olm_values <- exact_extract(olm_raster, AZO.geometry, fun = "mean", stack_apply = TRUE)
olm_raster
data.AZO <- tar_read(sf_pesticide_buffer)
data.AZO
# # For efficient extraction, we just need the geometry
AZO.geometry <- sf::st_geometry(data.AZO)
olm_values <- exact_extract(olm_raster, AZO.geometry, fun = "mean", stack_apply = TRUE)
olm_values
olm_values <- olm_values %>%
rename_with(function(x) str_replace_all(x, "[.]", "_")) %>%
rename_with(function(x) str_replace_all(x, "_{2}", "_")) %>%
rename_with(function(x) str_replace_all(x, "sol_order_usda_soiltax_", "")) %>%
rename_with(function(x) str_replace_all(x, "_1950_2017_v0_1", ""))
olm_values
tar_visnetwork(targets_only = T, exclude = c("wbd_data"))
tar_make()
olm_raster
terra::is.factor(olm_raster)
WBD
layername
olm_raster
olm_raster <- olm_layer_rast[[7]]
olm_raster <- tar_read(olm_layer_rast, branches = 7)
olm_raster
olm_raster <- olm_raster[[1]]
# Get the unique HUCs
huc_unique <- unique(data.AZO[[hucunit]])
olm_raster <- terra::as.factor(olm_raster)
texture_classes <- data.frame("classes" = c(
"clay", "silty_clay", "sandy_clay",
"clay_loam", "silty_clay_loam", "sandy_clay_loam", "loam",
"silt_loam", "sandy_loam", "silt",
"loamy_sand", "sand"
), "value" = 1:12)
for (i in 1:6) {
levels(olm_raster[[i]]) <- list(data.frame(
ID = 1:12,
textures = texture_classes$classes
))
}
olm_raster
levels(olm_raster)
names(olm_raster) <- c(
"Texture_0cm", "Texture_10cm", "Texture_30cm",
"Texture_60cm", "Texture_100cm", "Texture_200cm"
)
olm_raster
olm_raster$Texture_0cm
names(olm_raster$Texture_0cm)
levels(olm_raster$Texture_0cm)
class.df <- expand.grid(levels(olm_raster)[[1]]$ID, c(
"Texture_0cm", "Texture_10cm", "Texture_30cm",
"Texture_60cm", "Texture_100cm", "Texture_200cm"
))
olm_values <- data.table(hucunit = data.AZO[[hucunit]]) |>
setnames(hucunit)
olm_values
class.df <- class.df[order(class.df$Var1), ]
class.possible.names <- paste0("frac_", class.df$Var1, ".", class.df$Var2)
olm_values[, paste0(hucunit, ".", class.possible.names) := 0]
i
# get index - for rows of output - where data match the given HUC08
idx.row <- data.AZO[[hucunit]] == huc_unique[i]
# get the given HUC08 geometry from the WBD data
huc_polygon <- WBD[WBD[[hucunit]] == huc_unique[i],]
# calculate the mean raster values in the HUC
huc_val <- exact_extract(olm_raster, st_geometry(huc_polygon), fun = "frac", stack_apply = TRUE)
huc_val
# get indexs - for columns of outout - where classes match the output
idx.col <- which(class.possible.names %in% colnames(huc_val)) + 1
idx.col
# Assign the extracted class fractions to the appropriate location in the output
olm_values[idx.row, idx.col] <- huc_val
olm_huc12_9dae2790e8379df8 <- tar_read(olm_huc12_9dae2790e8379df8)
olm_huc12_9dae2790e8379df8 <- tar_read(olm_huc12, branches = 7)
olm_huc12_9dae2790e8379df8 <- tar_read(olm_huc12, branches = 6)
olm_raster
olm_raster[[1]]
olm_raster[[2]]
olm_raster[[6]]
tar_make()
tar_make()
olm_layer_rast[1]
olm_layer_rast[2]
olm_layer_rast <- tar_read(olm_layer_rast)
olm_layer_rast[2]
olm_layer_rast[7]
olm_layer_rast[6]
tar_meta()
tar_meta(fields = error, complete_only = TRUE)
debug(olm_huc12_9dae2790e8379df8)
tar_make()
tar_make(callr_function = NULL)
tar_make(callr_function = NULL)
View(sf_pesticide_huc)
View(olm_layer_rast)
eval(olm_layer_rast)
olm_raster
(any(grepl("TextureClass",names(olm_raster))))
olm_raster
tar_make(callr_function = NULL)
tar_make(callr_function = NULL)
olm_raster
tar_make(callr_function = NULL)
olm_raster
olm_raster[[1]]
olm_layer_rast <- tar_read(olm_layer_rast)
tar_make(callr_function = NULL)
huc_unique
olm_raster
olm_raster
idx.row
sum(idx.row)
huc_polygon
huc_val
idx.col
tar_invalidate(olm_huc12)
tar_make()
tar_visnetwork(targets_only = T, exclude = "wbd_data")
olm_huc12_1 <- tar_read(olm_huc12, branches = 1)
olm_huc12_1
sf_pesticide_huc <- tar_read(sf_pesticide_huc)
sf_pesticide <- tar_read(sf_pesticide)
olm_buffer1 <- tar_read(olm_buffer, branches = 1)
olm_buffer1
head(olm_buffer1)
head(olm_huc12_1)
olm_huc12_7 <- tar_read(olm_huc12, branches = 7)
View(olm_huc12_7)
colSums
colSums(is.na(olm_huc12_7))
colSums(is.na(olm_huc12_1))
colSums(is.na(olm_buffer1))
?tapp
olm_layer_files <- tar_read(olm_layer_files)
olm_layer_files
olm_layer_files[[1]]
sprintf(
"%s/input/OpenLandMapData/%s","/Volumes/set/Projects/PrestoGP_Pesticides/", olm_names
)
olm_names <- tar_read(olm_names)
olm_names
sprintf(
"%s/input/OpenLandMapData/%s","/Volumes/set/Projects/PrestoGP_Pesticides/", olm_names
)
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/%s", olm_names
)
)
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/%s", olm_names
)
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF%s", terra_climate_names
),
pattern = "*.nc",
full.names = TRUE
)
bandnames <- c(
"aet", "def", "PDSI", "pet", "ppt", "q", "soil", "srad",
"swe", "tmax", "tmin", "vap", "vpd", "ws"
)
bandnames_sorted <- sort(bandnames)
bandnames_sorted
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/%s", "terraClimate"),
pattern = "*.nc",
full.names = TRUE
)
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/TerraClimate_%s*", "terraClimate"),
pattern = "*.nc",
full.names = TRUE
)
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/TerraClimate_%s_*", "terraClimate"),
pattern = "*.nc",
full.names = TRUE
)
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/),
pattern = "*.nc",
full.names = TRUE
)
()
)
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/),
pattern = "*.nc",
full.names = TRUE
))
)
)
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF"),
# "/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/TerraClimate_%s_*", "terraClimate"),
pattern = "*.nc",
full.names = TRUE
)
r1 <- terra::rast(Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/TerraClimate_q_2020.nc)
r1 <- terra::rast("Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/TerraClimate_q_2020.nc")
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF"),
# "/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/TerraClimate_%s_*", "terraClimate"),
pattern = "*.nc",
full.names = TRUE
)
r1 <- terra::rast("/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/TerraClimate_vpd_2008.nc")
r1
r1$vpd_12
r1$vpd_11
tar_make()
r1
56/12
49/12
pwd
getwd()
tar_make()
# Created by use_targets().
# Main targets file for the project.
# Created by Kyle P Messier
# Load packages required to define the pipeline:
library(targets)
library(tarchetypes)
library(geotargets)
library(PrestoGP)
library(tibble)
library(sf)
library(terra)
library(qs)
library(tidyverse)
library(skimr)
library(rsample)
library(stats)
library(ggplot2)
library(parsnip)
library(fastDummies)
library(scales)
library(ggridges)
library(spatialsample)
library(broom)
library(yardstick)
library(data.table)
library(exactextractr)
getwd()
tar_make()
tar_visnetwork(targets_only = T, exclude = c("wbd_data"))
olm_huc12_1 <- tar_read(olm_huc12, branches = 1)
olm_huc12_1
tar_make()
tar_make()
tar_visnetwork(targets_only = T, exclude = c("wbd_data"))
olm_layer_files <- tar_read(olm_layer_files)
olm_layer_files
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/%s", olm_names
)
olm_names <- tar_read(olm_names)
olm_names
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/%s", olm_names
)
# Created by use_targets().
# Main targets file for the project.
# Created by Kyle P Messier
# Load packages required to define the pipeline:
library(targets)
library(tarchetypes)
library(geotargets)
library(PrestoGP)
library(tibble)
library(sf)
library(terra)
library(qs)
library(tidyverse)
library(skimr)
library(rsample)
library(stats)
library(ggplot2)
library(parsnip)
library(fastDummies)
library(scales)
library(ggridges)
library(spatialsample)
library(broom)
library(yardstick)
library(data.table)
library(exactextractr)
tar_make()
tar_invalidate(olm_layer_rast)
tar_invalidate(olm_layer_files)
tar_make()
getwd()
olm_names <- tar_read(olm_names)
olm_names
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/%s", olm_names
),
pattern = "*.tif",
full.names = TRUE
)
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/%s", olm_names
),
pattern = "*.tif",
full.names = TRUE
)
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/OpenLandMapData/%s", olm_names
),
pattern = "*.tif",
full.names = TRUE
)
tar_make()
tar_visnetwork(targets_only = T, exclude = "wbd_data")
terra_climate_names <- tar_read(terra_climate_names)
terra_climate_names
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/%s", terra_climate_names
),
pattern = "*.tif",
full.names = TRUE
)
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/%s", terra_climate_names
),
pattern = "*.nc",
full.names = TRUE
)
tar_make()
tar_visnetwork(targets_only = T, exclude = "wbd_data")
terra_climate_layer_rast <- tar_read(terra_climate_layer_rast, branches = 1)
terra_climate_layer_rast
terra_climate_layer_rast$terra_climate_layer_rast_10f7eafc58a222f8
terra_climate_layer_rast$terra_climate_layer_rast_10f7eafc58a222f8$aet_1
terra_climate_layer_rast[[1]]
terra_climate_layer_rast[[1]]$aet_1
terra_climate_layer_rast[[1]]$aet_2
terra_climate_layer_rast[[1]]
terra_climate_layer_rast[[1]][[1]]
terra_climate_layer_rast[[1]][,1]
terra_climate_layer_rast[[1]][[1]]
terra_climate_layer_rast[[1]][[2]]
terra_climate_layer_files <- tar_read(terra_climate_layer_files)
terra_climate_layer_files
terra_climate_layer_files[[1]]
terra_climate_layer_files[[2]]
8*8
8*5
5*5
25/40
6*6
36/40
32/40
32/5
sum(c(5,5,7,7,7))
sum(c(5,6,7,7,7))
0.4*60
c(2000:2022)
tar_make()
terra_climate_layer_files <- tar_read(terra_climate_layer_files)
terra_climate_layer_files
terra_climate_layer_files[[1]]
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/%s", terra_climate_names
),
pattern = "*.nc",
full.names = TRUE
)
terra_climate_years
terra_climate_years <- 2000:2022
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/%s_%s", terra_climate_names, terra_climate_years
),
pattern = "*.nc",
full.names = TRUE
)
tar_make()
tar_visnetwork(targets_only = T, exclude = "wbd_data")
terra_climate_layer_rast <- tar_read(terra_climate_layer_rast, branches = 1)
terra_climate_layer_rast
terra_climate_layer_rast$terra_climate_layer_rast_10f7eafc58a222f8
terra_climate_layer_rast$terra_climate_layer_rast_10f7eafc58a222f8$aet_1
terra_climate_layer_rast <- tar_read(terra_climate_layer_rast, branches = 2)
tc2 <- tar_read(terra_climate_layer_rast, branches = 2)
tc1 <- tar_read(terra_climate_layer_rast, branches = 1)
identical(tc1, tc2)
tc1
tc2
tc100 <- tar_read(terra_climate_layer_rast, branches = 100)
tc100 <- tar_read(terra_climate_layer_rast, branches = 50)
tc50 <- tar_read(terra_climate_layer_rast, branches = 50)
tc15 <- tar_read(terra_climate_layer_rast, branches = 15)
terra_climate_layer_rast_ca00580395f38f90 <- tar_read(terra_climate_layer_rast_ca00580395f38f90)
terra_climate_layer_rast_ca00580395f38f90
terra_climate_layer_rast_ca00580395f38f90$q_1
list.files(
sprintf(
"/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/%s", terra_climate_names
),
pattern = "*.nc",
full.names = TRUE
)
r1 <- rast("/Volumes/set/Projects/PrestoGP_Pesticides/input/terraClimate/NetCDF/ws/TerraClimate_ws_2001.nc")
r1
r1$ws_12
tar_make()
tar_make()
terra_climate_layer_files1 <- tar_read(terra_climate_layer_files, branches = 1)
terra_climate_layer_files1
View(terra_climate_layer_files1)
terra_climate_layer_files1[1]
terra_climate_layer_files1[2]
terra_climate_layer_files1[12]
terra_climate_layer_files1[22]
terra_climate_layer_files1[23]
terra_climate_layer_files2 <- tar_read(terra_climate_layer_files, branches = 2)
terra_climate_layer_files2
terra_climate_layer_files2[1]
terra_climate_layer_files1[1]
tar_make()
terra_climate_layer_files <- tar_read(terra_climate_layer_files)
terra_climate_layer_files
terra_climate_layer_files <- tar_read(terra_climate_layer_files, branches = 1)
terra_climate_layer_files
terra_climate_layer_files[1:5]
terra_climate_layer_files
print(terra_climate_layer_files)
t(terra_climate_layer_files)
print(terra_climate_layer_files)
View(terra_climate_layer_files)
terra_climate_layer_files[1]
terra_climate_layer_files[2]
tc2 <- tar_read(terra_climate_layer_files, branches = 2)
tc2
r2 <- rast(tc2)
r2
tc2
r2 <- rast(tc2[1])
r2
terra_climate_layer_files
terra_climate_layer_files <- tar_read(terra_climate_layer_files, branches = 1)
terra_climate_layer_files
